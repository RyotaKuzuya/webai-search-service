name: Claude CLI (Self-Hosted)

on:
  issue_comment:
    types: [created]
  workflow_dispatch:
    inputs:
      prompt:
        description: 'Claude に実行させるタスク'
        required: true
        type: string
      model:
        description: '使用するモデル'
        required: false
        default: 'opus-4'
        type: choice
        options:
          - 'opus-4'
          - 'sonnet-4'

jobs:
  claude-local:
    runs-on: self-hosted
    if: |
      github.event_name == 'workflow_dispatch' || 
      (github.event_name == 'issue_comment' && contains(github.event.comment.body, '@claude'))
    
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        
      - name: Extract prompt
        id: prompt
        run: |
          if [ "${{ github.event_name }}" == "workflow_dispatch" ]; then
            PROMPT="${{ github.event.inputs.prompt }}"
            MODEL="${{ github.event.inputs.model }}"
          else
            # Remove @claude from comment
            PROMPT=$(echo "${{ github.event.comment.body }}" | sed 's/@claude//g' | xargs)
            MODEL="opus-4"
          fi
          echo "prompt=$PROMPT" >> $GITHUB_OUTPUT
          echo "model=$MODEL" >> $GITHUB_OUTPUT
          
      - name: Run Claude CLI
        id: claude
        run: |
          # Claude CLIを実行
          RESPONSE=$(claude --model ${{ steps.prompt.outputs.model }} "${{ steps.prompt.outputs.prompt }}" 2>&1 | head -c 3000)
          
          # 出力を保存
          echo "response<<EOF" >> $GITHUB_OUTPUT
          echo "$RESPONSE" >> $GITHUB_OUTPUT
          echo "EOF" >> $GITHUB_OUTPUT
          
      - name: Comment results (Issue)
        if: github.event_name == 'issue_comment'
        uses: actions/github-script@v7
        with:
          script: |
            const response = `${{ steps.claude.outputs.response }}`;
            await github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: `## 🤖 Claude CLI Response\n\n\`\`\`\n${response}\n\`\`\``
            });
            
      - name: Show results (Workflow Dispatch)
        if: github.event_name == 'workflow_dispatch'
        run: |
          echo "## 🤖 Claude CLI Response"
          echo "${{ steps.claude.outputs.response }}"