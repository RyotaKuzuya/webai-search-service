name: Claude WebAI Webhook Trigger

on:
  issue_comment:
    types: [created]
  workflow_dispatch:
    inputs:
      prompt:
        description: 'Claude に実行させるタスク'
        required: true
        type: string
      model:
        description: '使用するモデル'
        required: false
        default: 'opus4'
        type: choice
        options:
          - 'opus4'
          - 'sonnet4'

jobs:
  trigger-claude:
    runs-on: ubuntu-latest
    if: |
      github.event_name == 'workflow_dispatch' || 
      (github.event_name == 'issue_comment' && contains(github.event.comment.body, '@claude'))
    
    steps:
      - name: Extract prompt
        id: prompt
        run: |
          if [ "${{ github.event_name }}" == "workflow_dispatch" ]; then
            PROMPT="${{ github.event.inputs.prompt }}"
            MODEL="${{ github.event.inputs.model }}"
          else
            # Remove @claude from comment
            PROMPT=$(echo "${{ github.event.comment.body }}" | sed 's/@claude//g' | xargs)
            MODEL="opus4"
          fi
          echo "prompt=$PROMPT" >> $GITHUB_OUTPUT
          echo "model=$MODEL" >> $GITHUB_OUTPUT
          
      - name: Call WebAI API
        id: claude_response
        run: |
          # WebAI APIエンドポイントを呼び出し
          RESPONSE=$(curl -s -X POST \
            -H "Content-Type: application/json" \
            -d "{\"message\": \"${{ steps.prompt.outputs.prompt }}\", \"model\": \"${{ steps.prompt.outputs.model }}\"}" \
            https://your-domain.com/api/simple/chat || echo '{"error": "API call failed"}')
          
          # GitHubの出力制限を考慮して最初の3000文字のみ保存
          echo "response<<EOF" >> $GITHUB_OUTPUT
          echo "$RESPONSE" | jq -r '.message // .error' | head -c 3000 >> $GITHUB_OUTPUT
          echo "EOF" >> $GITHUB_OUTPUT
          
      - name: Comment results (Issue)
        if: github.event_name == 'issue_comment'
        uses: actions/github-script@v7
        with:
          script: |
            const response = `${{ steps.claude_response.outputs.response }}`;
            await github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: `## 🤖 Claude WebAI Response\n\n${response}`
            });
            
      - name: Show results (Workflow Dispatch)
        if: github.event_name == 'workflow_dispatch'
        run: |
          echo "## 🤖 Claude WebAI Response"
          echo "${{ steps.claude_response.outputs.response }}"