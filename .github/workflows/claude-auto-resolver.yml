name: Claude Auto Issue Resolver

on:
  # 日本時間の夜間（23:00-06:00）に30分ごとに実行
  schedule:
    - cron: '0,30 14-21 * * *'  # UTC 14:00-21:30 = JST 23:00-06:30
    - cron: '0 22 * * *'        # UTC 22:00 = JST 07:00 (最終チェック)
  # 手動実行も可能
  workflow_dispatch:

permissions:
  contents: write
  pull-requests: write
  issues: write

jobs:
  find-and-process-issues:
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        
      - name: Find unprocessed issues
        id: find-issues
        uses: actions/github-script@v7
        with:
          script: |
            // claude-processedラベルがない、優先度ラベル付きのissueを検索
            const issues = await github.rest.issues.listForRepo({
              owner: context.repo.owner,
              repo: context.repo.repo,
              state: 'open',
              sort: 'created',
              direction: 'asc'
            });
            
            // 優先度でソート（high > middle > low）
            const priorityOrder = { 'priority:high': 1, 'priority:middle': 2, 'priority:low': 3 };
            const unprocessedIssues = issues.data
              .filter(issue => {
                const labels = issue.labels.map(l => l.name);
                return !labels.includes('claude-processed') && 
                       labels.some(l => l.startsWith('priority:'));
              })
              .sort((a, b) => {
                const aPriority = a.labels.find(l => l.name.startsWith('priority:'))?.name || 'priority:low';
                const bPriority = b.labels.find(l => l.name.startsWith('priority:'))?.name || 'priority:low';
                return (priorityOrder[aPriority] || 999) - (priorityOrder[bPriority] || 999);
              });
            
            if (unprocessedIssues.length > 0) {
              const issue = unprocessedIssues[0];
              console.log(`Found issue #${issue.number}: ${issue.title}`);
              core.setOutput('issue_number', issue.number);
              core.setOutput('issue_title', issue.title);
              core.setOutput('has_issue', 'true');
            } else {
              console.log('No unprocessed issues found');
              core.setOutput('has_issue', 'false');
            }
            
      - name: Process issue with Claude
        if: steps.find-issues.outputs.has_issue == 'true'
        uses: actions/github-script@v7
        with:
          script: |
            const issueNumber = ${{ steps.find-issues.outputs.issue_number }};
            const issueTitle = "${{ steps.find-issues.outputs.issue_title }}";
            
            // Issueの詳細を取得
            const issue = await github.rest.issues.get({
              owner: context.repo.owner,
              repo: context.repo.repo,
              issue_number: issueNumber
            });
            
            // Claudeへのメンション付きコメントを追加
            const comment = `@claude 

このIssue「${issueTitle}」を解決してください。

Issue内容:
${issue.data.body}

以下の手順で対応してください：
1. 問題を分析
2. 解決策を提案
3. 可能であればコードの修正を実施
4. PRを作成（必要な場合）`;
            
            await github.rest.issues.createComment({
              owner: context.repo.owner,
              repo: context.repo.repo,
              issue_number: issueNumber,
              body: comment
            });
            
            // claude-code-requestedラベルを追加
            await github.rest.issues.addLabels({
              owner: context.repo.owner,
              repo: context.repo.repo,
              issue_number: issueNumber,
              labels: ['claude-code-requested']
            });
            
            console.log(`Requested Claude to process issue #${issueNumber}`);
            
      - name: Summary
        if: always()
        run: |
          if [[ "${{ steps.find-issues.outputs.has_issue }}" == "true" ]]; then
            echo "✅ Issue #${{ steps.find-issues.outputs.issue_number }} をClaudeに処理依頼しました"
          else
            echo "📝 処理対象のIssueはありませんでした"
          fi