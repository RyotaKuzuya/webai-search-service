name: Refresh Claude OAuth Tokens

on:
  schedule:
    # Run daily at 2 AM UTC to refresh tokens
    - cron: '0 2 * * *'
  workflow_dispatch:
    inputs:
      force_refresh:
        description: 'Force token refresh even if not expired'
        required: false
        default: 'false'
        type: boolean

jobs:
  refresh-tokens:
    runs-on: ubuntu-latest
    
    permissions:
      contents: read
      
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 1
      
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'
      
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install requests
      
      - name: Check token expiration
        id: check_expiry
        env:
          CLAUDE_EXPIRES_AT: ${{ secrets.CLAUDE_EXPIRES_AT }}
        run: |
          if [ -z "$CLAUDE_EXPIRES_AT" ]; then
            echo "No expiration time found, will refresh"
            echo "needs_refresh=true" >> $GITHUB_OUTPUT
          else
            current_time=$(date +%s)
            time_diff=$((CLAUDE_EXPIRES_AT - current_time))
            
            # Refresh if less than 6 hours remaining
            if [ $time_diff -lt 21600 ]; then
              echo "Token expires in less than 6 hours, will refresh"
              echo "needs_refresh=true" >> $GITHUB_OUTPUT
            else
              hours_remaining=$((time_diff / 3600))
              echo "Token still valid for $hours_remaining hours"
              echo "needs_refresh=false" >> $GITHUB_OUTPUT
            fi
          fi
      
      - name: Refresh OAuth tokens
        if: steps.check_expiry.outputs.needs_refresh == 'true' || inputs.force_refresh == 'true'
        env:
          CLAUDE_REFRESH_TOKEN: ${{ secrets.CLAUDE_REFRESH_TOKEN }}
          CLAUDE_EXPIRES_AT: ${{ secrets.CLAUDE_EXPIRES_AT }}
          # Optional: Add these if your OAuth provider requires them
          # CLAUDE_CLIENT_ID: ${{ secrets.CLAUDE_CLIENT_ID }}
          # CLAUDE_CLIENT_SECRET: ${{ secrets.CLAUDE_CLIENT_SECRET }}
        run: |
          if [ "${{ inputs.force_refresh }}" == "true" ]; then
            python refresh_claude_oauth_tokens.py --force
          else
            python refresh_claude_oauth_tokens.py
          fi
      
      - name: Notify on failure
        if: failure()
        uses: actions/github-script@v7
        with:
          script: |
            // Create an issue if token refresh fails
            const issue = await github.rest.issues.create({
              owner: context.repo.owner,
              repo: context.repo.repo,
              title: 'Claude OAuth Token Refresh Failed',
              body: `The automated Claude OAuth token refresh failed at ${new Date().toISOString()}.
              
              Please check the workflow logs and manually refresh the tokens if needed.
              
              Workflow run: ${context.serverUrl}/${context.repo.owner}/${context.repo.repo}/actions/runs/${context.runId}`,
              labels: ['bug', 'authentication']
            });
            
            console.log(`Created issue #${issue.data.number}`)